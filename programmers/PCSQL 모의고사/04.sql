USE programmers_mockTest;

CREATE TABLE SUBMISSIONS (
    USER_ID INT NOT NULL,
    PROBLEM_ID INT NOT NULL,
    SUBMITTED INT NOT NULL,
    TIMESTAMP INT NOT NULL,
    PRIMARY KEY (USER_ID, TIMESTAMP)
);

CREATE TABLE PROBLEMS2 (
	PROBLEM_ID INT PRIMARY KEY NOT NULL,
    CORRECT_ANSWER INT NOT NULL,
    SCORE INT NOT NULL
);

INSERT INTO SUBMISSIONS (USER_ID, PROBLEM_ID, SUBMITTED, TIMESTAMP) VALUES
(101, 1, 9, 1234),
(101, 1, 10, 1235),
(101, 1, 11, 1236),
(101, 2, 22, 1456),
(101, 2, 23, 1457),
(101, 3, 34, 1458),
(301, 3, 33, 1459),
(501, 3, 44, 1567);

INSERT INTO PROBLEMS2 (PROBLEM_ID, CORRECT_ANSWER, SCORE) VALUES
(1, 11, 3),
(2, 22, 4),
(3, 33, 7);

SELECT * FROM SUBMISSIONS;

SELECT * FROM PROBLEMS2;

WITH USER_RANK AS (
SELECT USER_ID
     , PROBLEM_ID
     , SUBMITTED
     , TIMESTAMP
     , ROW_NUMBER() OVER (PARTITION BY USER_ID, PROBLEM_ID ORDER BY TIMESTAMP) AS "ranking" 
FROM SUBMISSIONS
)

, TEST2 AS (
SELECT UR.USER_ID
     , UR.RANKING
     , (CASE WHEN UR.SUBMITTED=P.CORRECT_ANSWER THEN "yes" ELSE "no" END) AS "answer"
FROM USER_RANK UR
    LEFT JOIN PROBLEMS2 P ON UR.PROBLEM_ID=P.PROBLEM_ID
)

SELECT RANKING AS NTH_SUBMISSION
     , ROUND(COUNT(CASE WHEN answer="yes" THEN 1 END) / COUNT(*) *100, 0) AS CORRECT_RATE
FROM test2
GROUP BY 1
ORDER BY 1
