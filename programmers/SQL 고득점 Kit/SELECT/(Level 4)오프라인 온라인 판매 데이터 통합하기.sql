USE programmers_select;

CREATE TABLE ONLINE_SALE2 (
    ONLINE_SALE_ID INTEGER PRIMARY KEY NOT NULL,
    USER_ID INTEGER NOT NULL,
    PRODUCT_ID INTEGER NOT NULL,
    SALES_AMOUNT INTEGER NOT NULL,
    SALES_DATE DATE NOT NULL
);

CREATE TABLE OFFLINE_SALE (
    OFFLINE_SALE_ID INTEGER PRIMARY KEY NOT NULL,
    PRODUCT_ID INTEGER NOT NULL,
    SALES_AMOUNT INTEGER NOT NULL,
    SALES_DATE DATE NOT NULL
);

SHOW TABLES;

INSERT INTO ONLINE_SALE2 (ONLINE_SALE_ID, USER_ID, PRODUCT_ID, SALES_AMOUNT, SALES_DATE)
VALUES
    (1, 1, 3, 2, '2022-02-25'),
    (2, 4, 4, 1, '2022-03-01'),
    (4, 2, 2, 2, '2022-03-02'),
    (3, 6, 3, 3, '2022-03-02'),
    (5, 5, 5, 1, '2022-03-03'),
    (6, 5, 7, 1, '2022-04-06');

INSERT INTO OFFLINE_SALE (OFFLINE_SALE_ID, PRODUCT_ID, SALES_AMOUNT, SALES_DATE)
VALUES
    (1, 1, 2, '2022-02-21'),
    (4, 1, 2, '2022-03-01'),
    (3, 3, 3, '2022-03-01'),
    (2, 4, 1, '2022-03-01'),
    (5, 2, 1, '2022-03-03'),
    (6, 2, 1, '2022-04-01');

SELECT * FROM ONLINE_SALE2;

SELECT * FROM OFFLINE_SALE;

-- 1
SELECT 
	DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, 
    PRODUCT_ID, 
    USER_ID, 
    SALES_AMOUNT
FROM 
	ONLINE_SALE2
WHERE 
	SALES_DATE LIKE ('2022-03%')
UNION ALL
SELECT 
	DATE_FORMAT(SALES_DATE, '%Y-%m-%d') AS SALES_DATE, 
    PRODUCT_ID, 
    NULL AS USER_ID, 
    SALES_AMOUNT
FROM 
	OFFLINE_SALE
WHERE 
	SALES_DATE LIKE ('2022-03%')
ORDER BY 1, 2, 3;

-- 2
WITH SALE AS 
            (SELECT SALES_DATE
                    ,PRODUCT_ID
                    ,USER_ID
                    ,SALES_AMOUNT
            FROM ONLINE_SALE
            UNION ALL
            SELECT SALES_DATE
                    ,PRODUCT_ID
                    ,NULL USER_ID
                    ,SALES_AMOUNT
            FROM OFFLINE_SALE)

SELECT DATE_FORMAT(SALES_DATE,'%Y-%m-%d') AS SALES_DATE
      ,PRODUCT_ID
      ,USER_ID 
      ,SALES_AMOUNT 
FROM SALE
WHERE SALES_DATE LIKE '2022-03%'
ORDER BY SALES_DATE,PRODUCT_ID,USER_ID